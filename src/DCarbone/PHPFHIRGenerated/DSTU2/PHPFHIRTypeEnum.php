<?php declare(strict_types=1);

namespace DCarbone\PHPFHIRGenerated\DSTU2;

/*!
 * This class was generated with the PHPFHIR library (https://github.com/dcarbone/php-fhir) using
 * class definitions from HL7 FHIR (https://www.hl7.org/fhir/)
 * 
 * Class creation date: August 22nd, 2024 02:47+0000
 * 
 * PHPFHIR Copyright:
 * 
 * Copyright 2016-2024 Daniel Carbone (daniel.p.carbone@gmail.com)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 *
 * FHIR Copyright Notice:
 *
 *   Copyright (c) 2011+, HL7, Inc.
 *   All rights reserved.
 * 
 *   Redistribution and use in source and binary forms, with or without modification,
 *   are permitted provided that the following conditions are met:
 * 
 *    * Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *    * Neither the name of HL7 nor the names of its contributors may be used to
 *      endorse or promote products derived from this software without specific
 *      prior written permission.
 * 
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *   IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *   POSSIBILITY OF SUCH DAMAGE.
 * 
 * 
 *   Generated on Sat, Oct 24, 2015 07:41+1100 for FHIR v1.0.2
 * 
 *   Note: the schemas & schematrons do not contain all of the rules about what makes resources
 *   valid. Implementers will still need to be familiar with the content of the specification and with
 *   any profiles that apply to the resources in order to make a conformant implementation.
 * 
 */

/**
 * Enum PHPFHIRTypeEnum
 * @package \DCarbone\PHPFHIRGenerated\DSTU2
 */
enum PHPFHIRTypeEnum : string
{
    case ACCOUNT = 'Account';
    case ACCOUNT_STATUS = 'AccountStatus';
    case ACCOUNT_STATUS_HYPHEN_LIST = 'AccountStatus-list';
    case ACTION_LIST = 'ActionList';
    case ACTION_LIST_HYPHEN_LIST = 'ActionList-list';
    case ADDRESS = 'Address';
    case ADDRESS_TYPE = 'AddressType';
    case ADDRESS_TYPE_HYPHEN_LIST = 'AddressType-list';
    case ADDRESS_USE = 'AddressUse';
    case ADDRESS_USE_HYPHEN_LIST = 'AddressUse-list';
    case ADMINISTRATIVE_GENDER = 'AdministrativeGender';
    case ADMINISTRATIVE_GENDER_HYPHEN_LIST = 'AdministrativeGender-list';
    case AGE = 'Age';
    case AGGREGATION_MODE = 'AggregationMode';
    case AGGREGATION_MODE_HYPHEN_LIST = 'AggregationMode-list';
    case ALLERGY_INTOLERANCE = 'AllergyIntolerance';
    case ALLERGY_INTOLERANCE_DOT_REACTION = 'AllergyIntolerance.Reaction';
    case ALLERGY_INTOLERANCE_CATEGORY = 'AllergyIntoleranceCategory';
    case ALLERGY_INTOLERANCE_CATEGORY_HYPHEN_LIST = 'AllergyIntoleranceCategory-list';
    case ALLERGY_INTOLERANCE_CERTAINTY = 'AllergyIntoleranceCertainty';
    case ALLERGY_INTOLERANCE_CERTAINTY_HYPHEN_LIST = 'AllergyIntoleranceCertainty-list';
    case ALLERGY_INTOLERANCE_CRITICALITY = 'AllergyIntoleranceCriticality';
    case ALLERGY_INTOLERANCE_CRITICALITY_HYPHEN_LIST = 'AllergyIntoleranceCriticality-list';
    case ALLERGY_INTOLERANCE_SEVERITY = 'AllergyIntoleranceSeverity';
    case ALLERGY_INTOLERANCE_SEVERITY_HYPHEN_LIST = 'AllergyIntoleranceSeverity-list';
    case ALLERGY_INTOLERANCE_STATUS = 'AllergyIntoleranceStatus';
    case ALLERGY_INTOLERANCE_STATUS_HYPHEN_LIST = 'AllergyIntoleranceStatus-list';
    case ALLERGY_INTOLERANCE_TYPE = 'AllergyIntoleranceType';
    case ALLERGY_INTOLERANCE_TYPE_HYPHEN_LIST = 'AllergyIntoleranceType-list';
    case ANNOTATION = 'Annotation';
    case ANSWER_FORMAT = 'AnswerFormat';
    case ANSWER_FORMAT_HYPHEN_LIST = 'AnswerFormat-list';
    case APPOINTMENT = 'Appointment';
    case APPOINTMENT_DOT_PARTICIPANT = 'Appointment.Participant';
    case APPOINTMENT_RESPONSE = 'AppointmentResponse';
    case APPOINTMENT_STATUS = 'AppointmentStatus';
    case APPOINTMENT_STATUS_HYPHEN_LIST = 'AppointmentStatus-list';
    case ASSERTION_DIRECTION_TYPE = 'AssertionDirectionType';
    case ASSERTION_DIRECTION_TYPE_HYPHEN_LIST = 'AssertionDirectionType-list';
    case ASSERTION_OPERATOR_TYPE = 'AssertionOperatorType';
    case ASSERTION_OPERATOR_TYPE_HYPHEN_LIST = 'AssertionOperatorType-list';
    case ASSERTION_RESPONSE_TYPES = 'AssertionResponseTypes';
    case ASSERTION_RESPONSE_TYPES_HYPHEN_LIST = 'AssertionResponseTypes-list';
    case ATTACHMENT = 'Attachment';
    case AUDIT_EVENT = 'AuditEvent';
    case AUDIT_EVENT_DOT_DETAIL = 'AuditEvent.Detail';
    case AUDIT_EVENT_DOT_EVENT = 'AuditEvent.Event';
    case AUDIT_EVENT_DOT_NETWORK = 'AuditEvent.Network';
    case AUDIT_EVENT_DOT_OBJECT = 'AuditEvent.Object';
    case AUDIT_EVENT_DOT_PARTICIPANT = 'AuditEvent.Participant';
    case AUDIT_EVENT_DOT_SOURCE = 'AuditEvent.Source';
    case AUDIT_EVENT_ACTION = 'AuditEventAction';
    case AUDIT_EVENT_ACTION_HYPHEN_LIST = 'AuditEventAction-list';
    case AUDIT_EVENT_OUTCOME = 'AuditEventOutcome';
    case AUDIT_EVENT_OUTCOME_HYPHEN_LIST = 'AuditEventOutcome-list';
    case AUDIT_EVENT_PARTICIPANT_NETWORK_TYPE = 'AuditEventParticipantNetworkType';
    case AUDIT_EVENT_PARTICIPANT_NETWORK_TYPE_HYPHEN_LIST = 'AuditEventParticipantNetworkType-list';
    case BACKBONE_ELEMENT = 'BackboneElement';
    case BASE_64BINARY = 'base64Binary';
    case BASE_64BINARY_HYPHEN_PRIMITIVE = 'base64Binary-primitive';
    case BASIC = 'Basic';
    case BINARY = 'Binary';
    case BINDING_STRENGTH = 'BindingStrength';
    case BINDING_STRENGTH_HYPHEN_LIST = 'BindingStrength-list';
    case BODY_SITE = 'BodySite';
    case BOOLEAN = 'boolean';
    case BOOLEAN_HYPHEN_PRIMITIVE = 'boolean-primitive';
    case BUNDLE = 'Bundle';
    case BUNDLE_DOT_ENTRY = 'Bundle.Entry';
    case BUNDLE_DOT_LINK = 'Bundle.Link';
    case BUNDLE_DOT_REQUEST = 'Bundle.Request';
    case BUNDLE_DOT_RESPONSE = 'Bundle.Response';
    case BUNDLE_DOT_SEARCH = 'Bundle.Search';
    case BUNDLE_TYPE = 'BundleType';
    case BUNDLE_TYPE_HYPHEN_LIST = 'BundleType-list';
    case CARE_PLAN = 'CarePlan';
    case CARE_PLAN_DOT_ACTIVITY = 'CarePlan.Activity';
    case CARE_PLAN_DOT_DETAIL = 'CarePlan.Detail';
    case CARE_PLAN_DOT_PARTICIPANT = 'CarePlan.Participant';
    case CARE_PLAN_DOT_RELATED_PLAN = 'CarePlan.RelatedPlan';
    case CARE_PLAN_ACTIVITY_STATUS = 'CarePlanActivityStatus';
    case CARE_PLAN_ACTIVITY_STATUS_HYPHEN_LIST = 'CarePlanActivityStatus-list';
    case CARE_PLAN_RELATIONSHIP = 'CarePlanRelationship';
    case CARE_PLAN_RELATIONSHIP_HYPHEN_LIST = 'CarePlanRelationship-list';
    case CARE_PLAN_STATUS = 'CarePlanStatus';
    case CARE_PLAN_STATUS_HYPHEN_LIST = 'CarePlanStatus-list';
    case CLAIM = 'Claim';
    case CLAIM_DOT_COVERAGE = 'Claim.Coverage';
    case CLAIM_DOT_DETAIL = 'Claim.Detail';
    case CLAIM_DOT_DIAGNOSIS = 'Claim.Diagnosis';
    case CLAIM_DOT_ITEM = 'Claim.Item';
    case CLAIM_DOT_MISSING_TEETH = 'Claim.MissingTeeth';
    case CLAIM_DOT_PAYEE = 'Claim.Payee';
    case CLAIM_DOT_PROSTHESIS = 'Claim.Prosthesis';
    case CLAIM_DOT_SUB_DETAIL = 'Claim.SubDetail';
    case CLAIM_RESPONSE = 'ClaimResponse';
    case CLAIM_RESPONSE_DOT_ADD_ITEM = 'ClaimResponse.AddItem';
    case CLAIM_RESPONSE_DOT_ADJUDICATION = 'ClaimResponse.Adjudication';
    case CLAIM_RESPONSE_DOT_ADJUDICATION_1 = 'ClaimResponse.Adjudication1';
    case CLAIM_RESPONSE_DOT_ADJUDICATION_2 = 'ClaimResponse.Adjudication2';
    case CLAIM_RESPONSE_DOT_ADJUDICATION_3 = 'ClaimResponse.Adjudication3';
    case CLAIM_RESPONSE_DOT_ADJUDICATION_4 = 'ClaimResponse.Adjudication4';
    case CLAIM_RESPONSE_DOT_COVERAGE = 'ClaimResponse.Coverage';
    case CLAIM_RESPONSE_DOT_DETAIL = 'ClaimResponse.Detail';
    case CLAIM_RESPONSE_DOT_DETAIL_1 = 'ClaimResponse.Detail1';
    case CLAIM_RESPONSE_DOT_ERROR = 'ClaimResponse.Error';
    case CLAIM_RESPONSE_DOT_ITEM = 'ClaimResponse.Item';
    case CLAIM_RESPONSE_DOT_NOTE = 'ClaimResponse.Note';
    case CLAIM_RESPONSE_DOT_SUB_DETAIL = 'ClaimResponse.SubDetail';
    case CLAIM_TYPE = 'ClaimType';
    case CLAIM_TYPE_HYPHEN_LIST = 'ClaimType-list';
    case CLINICAL_IMPRESSION = 'ClinicalImpression';
    case CLINICAL_IMPRESSION_DOT_FINDING = 'ClinicalImpression.Finding';
    case CLINICAL_IMPRESSION_DOT_INVESTIGATIONS = 'ClinicalImpression.Investigations';
    case CLINICAL_IMPRESSION_DOT_RULED_OUT = 'ClinicalImpression.RuledOut';
    case CLINICAL_IMPRESSION_STATUS = 'ClinicalImpressionStatus';
    case CLINICAL_IMPRESSION_STATUS_HYPHEN_LIST = 'ClinicalImpressionStatus-list';
    case CODE = 'code';
    case CODE_HYPHEN_PRIMITIVE = 'code-primitive';
    case CODEABLE_CONCEPT = 'CodeableConcept';
    case CODING = 'Coding';
    case COMMUNICATION = 'Communication';
    case COMMUNICATION_DOT_PAYLOAD = 'Communication.Payload';
    case COMMUNICATION_REQUEST = 'CommunicationRequest';
    case COMMUNICATION_REQUEST_DOT_PAYLOAD = 'CommunicationRequest.Payload';
    case COMMUNICATION_REQUEST_STATUS = 'CommunicationRequestStatus';
    case COMMUNICATION_REQUEST_STATUS_HYPHEN_LIST = 'CommunicationRequestStatus-list';
    case COMMUNICATION_STATUS = 'CommunicationStatus';
    case COMMUNICATION_STATUS_HYPHEN_LIST = 'CommunicationStatus-list';
    case COMPOSITION = 'Composition';
    case COMPOSITION_DOT_ATTESTER = 'Composition.Attester';
    case COMPOSITION_DOT_EVENT = 'Composition.Event';
    case COMPOSITION_DOT_SECTION = 'Composition.Section';
    case COMPOSITION_ATTESTATION_MODE = 'CompositionAttestationMode';
    case COMPOSITION_ATTESTATION_MODE_HYPHEN_LIST = 'CompositionAttestationMode-list';
    case COMPOSITION_STATUS = 'CompositionStatus';
    case COMPOSITION_STATUS_HYPHEN_LIST = 'CompositionStatus-list';
    case CONCEPT_MAP = 'ConceptMap';
    case CONCEPT_MAP_DOT_CONTACT = 'ConceptMap.Contact';
    case CONCEPT_MAP_DOT_DEPENDS_ON = 'ConceptMap.DependsOn';
    case CONCEPT_MAP_DOT_ELEMENT = 'ConceptMap.Element';
    case CONCEPT_MAP_DOT_TARGET = 'ConceptMap.Target';
    case CONCEPT_MAP_EQUIVALENCE = 'ConceptMapEquivalence';
    case CONCEPT_MAP_EQUIVALENCE_HYPHEN_LIST = 'ConceptMapEquivalence-list';
    case CONDITION = 'Condition';
    case CONDITION_DOT_EVIDENCE = 'Condition.Evidence';
    case CONDITION_DOT_STAGE = 'Condition.Stage';
    case CONDITIONAL_DELETE_STATUS = 'ConditionalDeleteStatus';
    case CONDITIONAL_DELETE_STATUS_HYPHEN_LIST = 'ConditionalDeleteStatus-list';
    case CONDITION_VERIFICATION_STATUS = 'ConditionVerificationStatus';
    case CONDITION_VERIFICATION_STATUS_HYPHEN_LIST = 'ConditionVerificationStatus-list';
    case CONFORMANCE = 'Conformance';
    case CONFORMANCE_DOT_CERTIFICATE = 'Conformance.Certificate';
    case CONFORMANCE_DOT_CONTACT = 'Conformance.Contact';
    case CONFORMANCE_DOT_DOCUMENT = 'Conformance.Document';
    case CONFORMANCE_DOT_ENDPOINT = 'Conformance.Endpoint';
    case CONFORMANCE_DOT_EVENT = 'Conformance.Event';
    case CONFORMANCE_DOT_IMPLEMENTATION = 'Conformance.Implementation';
    case CONFORMANCE_DOT_INTERACTION = 'Conformance.Interaction';
    case CONFORMANCE_DOT_INTERACTION_1 = 'Conformance.Interaction1';
    case CONFORMANCE_DOT_MESSAGING = 'Conformance.Messaging';
    case CONFORMANCE_DOT_OPERATION = 'Conformance.Operation';
    case CONFORMANCE_DOT_RESOURCE = 'Conformance.Resource';
    case CONFORMANCE_DOT_REST = 'Conformance.Rest';
    case CONFORMANCE_DOT_SEARCH_PARAM = 'Conformance.SearchParam';
    case CONFORMANCE_DOT_SECURITY = 'Conformance.Security';
    case CONFORMANCE_DOT_SOFTWARE = 'Conformance.Software';
    case CONFORMANCE_EVENT_MODE = 'ConformanceEventMode';
    case CONFORMANCE_EVENT_MODE_HYPHEN_LIST = 'ConformanceEventMode-list';
    case CONFORMANCE_RESOURCE_STATUS = 'ConformanceResourceStatus';
    case CONFORMANCE_RESOURCE_STATUS_HYPHEN_LIST = 'ConformanceResourceStatus-list';
    case CONFORMANCE_STATEMENT_KIND = 'ConformanceStatementKind';
    case CONFORMANCE_STATEMENT_KIND_HYPHEN_LIST = 'ConformanceStatementKind-list';
    case CONSTRAINT_SEVERITY = 'ConstraintSeverity';
    case CONSTRAINT_SEVERITY_HYPHEN_LIST = 'ConstraintSeverity-list';
    case CONTACT_POINT = 'ContactPoint';
    case CONTACT_POINT_SYSTEM = 'ContactPointSystem';
    case CONTACT_POINT_SYSTEM_HYPHEN_LIST = 'ContactPointSystem-list';
    case CONTACT_POINT_USE = 'ContactPointUse';
    case CONTACT_POINT_USE_HYPHEN_LIST = 'ContactPointUse-list';
    case CONTENT_TYPE = 'ContentType';
    case CONTENT_TYPE_HYPHEN_LIST = 'ContentType-list';
    case CONTRACT = 'Contract';
    case CONTRACT_DOT_ACTOR = 'Contract.Actor';
    case CONTRACT_DOT_ACTOR_1 = 'Contract.Actor1';
    case CONTRACT_DOT_FRIENDLY = 'Contract.Friendly';
    case CONTRACT_DOT_LEGAL = 'Contract.Legal';
    case CONTRACT_DOT_RULE = 'Contract.Rule';
    case CONTRACT_DOT_SIGNER = 'Contract.Signer';
    case CONTRACT_DOT_TERM = 'Contract.Term';
    case CONTRACT_DOT_VALUED_ITEM = 'Contract.ValuedItem';
    case CONTRACT_DOT_VALUED_ITEM_1 = 'Contract.ValuedItem1';
    case COUNT = 'Count';
    case COVERAGE = 'Coverage';
    case DATA_ELEMENT = 'DataElement';
    case DATA_ELEMENT_DOT_CONTACT = 'DataElement.Contact';
    case DATA_ELEMENT_DOT_MAPPING = 'DataElement.Mapping';
    case DATA_ELEMENT_STRINGENCY = 'DataElementStringency';
    case DATA_ELEMENT_STRINGENCY_HYPHEN_LIST = 'DataElementStringency-list';
    case DATE = 'date';
    case DATE_HYPHEN_PRIMITIVE = 'date-primitive';
    case DATE_TIME = 'dateTime';
    case DATE_TIME_HYPHEN_PRIMITIVE = 'dateTime-primitive';
    case DAYS_OF_WEEK = 'DaysOfWeek';
    case DAYS_OF_WEEK_HYPHEN_LIST = 'DaysOfWeek-list';
    case DECIMAL = 'decimal';
    case DECIMAL_HYPHEN_PRIMITIVE = 'decimal-primitive';
    case DETECTED_ISSUE = 'DetectedIssue';
    case DETECTED_ISSUE_DOT_MITIGATION = 'DetectedIssue.Mitigation';
    case DETECTED_ISSUE_SEVERITY = 'DetectedIssueSeverity';
    case DETECTED_ISSUE_SEVERITY_HYPHEN_LIST = 'DetectedIssueSeverity-list';
    case DEVICE = 'Device';
    case DEVICE_COMPONENT = 'DeviceComponent';
    case DEVICE_COMPONENT_DOT_PRODUCTION_SPECIFICATION = 'DeviceComponent.ProductionSpecification';
    case DEVICE_METRIC = 'DeviceMetric';
    case DEVICE_METRIC_DOT_CALIBRATION = 'DeviceMetric.Calibration';
    case DEVICE_METRIC_CALIBRATION_STATE = 'DeviceMetricCalibrationState';
    case DEVICE_METRIC_CALIBRATION_STATE_HYPHEN_LIST = 'DeviceMetricCalibrationState-list';
    case DEVICE_METRIC_CALIBRATION_TYPE = 'DeviceMetricCalibrationType';
    case DEVICE_METRIC_CALIBRATION_TYPE_HYPHEN_LIST = 'DeviceMetricCalibrationType-list';
    case DEVICE_METRIC_CATEGORY = 'DeviceMetricCategory';
    case DEVICE_METRIC_CATEGORY_HYPHEN_LIST = 'DeviceMetricCategory-list';
    case DEVICE_METRIC_COLOR = 'DeviceMetricColor';
    case DEVICE_METRIC_COLOR_HYPHEN_LIST = 'DeviceMetricColor-list';
    case DEVICE_METRIC_OPERATIONAL_STATUS = 'DeviceMetricOperationalStatus';
    case DEVICE_METRIC_OPERATIONAL_STATUS_HYPHEN_LIST = 'DeviceMetricOperationalStatus-list';
    case DEVICE_STATUS = 'DeviceStatus';
    case DEVICE_STATUS_HYPHEN_LIST = 'DeviceStatus-list';
    case DEVICE_USE_REQUEST = 'DeviceUseRequest';
    case DEVICE_USE_REQUEST_PRIORITY = 'DeviceUseRequestPriority';
    case DEVICE_USE_REQUEST_PRIORITY_HYPHEN_LIST = 'DeviceUseRequestPriority-list';
    case DEVICE_USE_REQUEST_STATUS = 'DeviceUseRequestStatus';
    case DEVICE_USE_REQUEST_STATUS_HYPHEN_LIST = 'DeviceUseRequestStatus-list';
    case DEVICE_USE_STATEMENT = 'DeviceUseStatement';
    case DIAGNOSTIC_ORDER = 'DiagnosticOrder';
    case DIAGNOSTIC_ORDER_DOT_EVENT = 'DiagnosticOrder.Event';
    case DIAGNOSTIC_ORDER_DOT_ITEM = 'DiagnosticOrder.Item';
    case DIAGNOSTIC_ORDER_PRIORITY = 'DiagnosticOrderPriority';
    case DIAGNOSTIC_ORDER_PRIORITY_HYPHEN_LIST = 'DiagnosticOrderPriority-list';
    case DIAGNOSTIC_ORDER_STATUS = 'DiagnosticOrderStatus';
    case DIAGNOSTIC_ORDER_STATUS_HYPHEN_LIST = 'DiagnosticOrderStatus-list';
    case DIAGNOSTIC_REPORT = 'DiagnosticReport';
    case DIAGNOSTIC_REPORT_DOT_IMAGE = 'DiagnosticReport.Image';
    case DIAGNOSTIC_REPORT_STATUS = 'DiagnosticReportStatus';
    case DIAGNOSTIC_REPORT_STATUS_HYPHEN_LIST = 'DiagnosticReportStatus-list';
    case DIGITAL_MEDIA_TYPE = 'DigitalMediaType';
    case DIGITAL_MEDIA_TYPE_HYPHEN_LIST = 'DigitalMediaType-list';
    case DISTANCE = 'Distance';
    case DOCUMENT_MANIFEST = 'DocumentManifest';
    case DOCUMENT_MANIFEST_DOT_CONTENT = 'DocumentManifest.Content';
    case DOCUMENT_MANIFEST_DOT_RELATED = 'DocumentManifest.Related';
    case DOCUMENT_MODE = 'DocumentMode';
    case DOCUMENT_MODE_HYPHEN_LIST = 'DocumentMode-list';
    case DOCUMENT_REFERENCE = 'DocumentReference';
    case DOCUMENT_REFERENCE_DOT_CONTENT = 'DocumentReference.Content';
    case DOCUMENT_REFERENCE_DOT_CONTEXT = 'DocumentReference.Context';
    case DOCUMENT_REFERENCE_DOT_RELATED = 'DocumentReference.Related';
    case DOCUMENT_REFERENCE_DOT_RELATES_TO = 'DocumentReference.RelatesTo';
    case DOCUMENT_REFERENCE_STATUS = 'DocumentReferenceStatus';
    case DOCUMENT_REFERENCE_STATUS_HYPHEN_LIST = 'DocumentReferenceStatus-list';
    case DOCUMENT_RELATIONSHIP_TYPE = 'DocumentRelationshipType';
    case DOCUMENT_RELATIONSHIP_TYPE_HYPHEN_LIST = 'DocumentRelationshipType-list';
    case DOMAIN_RESOURCE = 'DomainResource';
    case DURATION = 'Duration';
    case ELEMENT = 'Element';
    case ELEMENT_DEFINITION = 'ElementDefinition';
    case ELEMENT_DEFINITION_DOT_BASE = 'ElementDefinition.Base';
    case ELEMENT_DEFINITION_DOT_BINDING = 'ElementDefinition.Binding';
    case ELEMENT_DEFINITION_DOT_CONSTRAINT = 'ElementDefinition.Constraint';
    case ELEMENT_DEFINITION_DOT_MAPPING = 'ElementDefinition.Mapping';
    case ELEMENT_DEFINITION_DOT_SLICING = 'ElementDefinition.Slicing';
    case ELEMENT_DEFINITION_DOT_TYPE = 'ElementDefinition.Type';
    case ELIGIBILITY_REQUEST = 'EligibilityRequest';
    case ELIGIBILITY_RESPONSE = 'EligibilityResponse';
    case ENCOUNTER = 'Encounter';
    case ENCOUNTER_DOT_HOSPITALIZATION = 'Encounter.Hospitalization';
    case ENCOUNTER_DOT_LOCATION = 'Encounter.Location';
    case ENCOUNTER_DOT_PARTICIPANT = 'Encounter.Participant';
    case ENCOUNTER_DOT_STATUS_HISTORY = 'Encounter.StatusHistory';
    case ENCOUNTER_CLASS = 'EncounterClass';
    case ENCOUNTER_CLASS_HYPHEN_LIST = 'EncounterClass-list';
    case ENCOUNTER_LOCATION_STATUS = 'EncounterLocationStatus';
    case ENCOUNTER_LOCATION_STATUS_HYPHEN_LIST = 'EncounterLocationStatus-list';
    case ENCOUNTER_STATE = 'EncounterState';
    case ENCOUNTER_STATE_HYPHEN_LIST = 'EncounterState-list';
    case ENROLLMENT_REQUEST = 'EnrollmentRequest';
    case ENROLLMENT_RESPONSE = 'EnrollmentResponse';
    case EPISODE_OF_CARE = 'EpisodeOfCare';
    case EPISODE_OF_CARE_DOT_CARE_TEAM = 'EpisodeOfCare.CareTeam';
    case EPISODE_OF_CARE_DOT_STATUS_HISTORY = 'EpisodeOfCare.StatusHistory';
    case EPISODE_OF_CARE_STATUS = 'EpisodeOfCareStatus';
    case EPISODE_OF_CARE_STATUS_HYPHEN_LIST = 'EpisodeOfCareStatus-list';
    case EVENT_TIMING = 'EventTiming';
    case EVENT_TIMING_HYPHEN_LIST = 'EventTiming-list';
    case EXPLANATION_OF_BENEFIT = 'ExplanationOfBenefit';
    case EXTENSION = 'Extension';
    case EXTENSION_CONTEXT = 'ExtensionContext';
    case EXTENSION_CONTEXT_HYPHEN_LIST = 'ExtensionContext-list';
    case FAMILY_HISTORY_STATUS = 'FamilyHistoryStatus';
    case FAMILY_HISTORY_STATUS_HYPHEN_LIST = 'FamilyHistoryStatus-list';
    case FAMILY_MEMBER_HISTORY = 'FamilyMemberHistory';
    case FAMILY_MEMBER_HISTORY_DOT_CONDITION = 'FamilyMemberHistory.Condition';
    case FILTER_OPERATOR = 'FilterOperator';
    case FILTER_OPERATOR_HYPHEN_LIST = 'FilterOperator-list';
    case FLAG = 'Flag';
    case FLAG_STATUS = 'FlagStatus';
    case FLAG_STATUS_HYPHEN_LIST = 'FlagStatus-list';
    case GOAL = 'Goal';
    case GOAL_DOT_OUTCOME = 'Goal.Outcome';
    case GOAL_STATUS = 'GoalStatus';
    case GOAL_STATUS_HYPHEN_LIST = 'GoalStatus-list';
    case GROUP = 'Group';
    case GROUP_DOT_CHARACTERISTIC = 'Group.Characteristic';
    case GROUP_DOT_MEMBER = 'Group.Member';
    case GROUP_TYPE = 'GroupType';
    case GROUP_TYPE_HYPHEN_LIST = 'GroupType-list';
    case GUIDE_DEPENDENCY_TYPE = 'GuideDependencyType';
    case GUIDE_DEPENDENCY_TYPE_HYPHEN_LIST = 'GuideDependencyType-list';
    case GUIDE_PAGE_KIND = 'GuidePageKind';
    case GUIDE_PAGE_KIND_HYPHEN_LIST = 'GuidePageKind-list';
    case GUIDE_RESOURCE_PURPOSE = 'GuideResourcePurpose';
    case GUIDE_RESOURCE_PURPOSE_HYPHEN_LIST = 'GuideResourcePurpose-list';
    case HEALTHCARE_SERVICE = 'HealthcareService';
    case HEALTHCARE_SERVICE_DOT_AVAILABLE_TIME = 'HealthcareService.AvailableTime';
    case HEALTHCARE_SERVICE_DOT_NOT_AVAILABLE = 'HealthcareService.NotAvailable';
    case HEALTHCARE_SERVICE_DOT_SERVICE_TYPE = 'HealthcareService.ServiceType';
    case HTTPVERB = 'HTTPVerb';
    case HTTPVERB_HYPHEN_LIST = 'HTTPVerb-list';
    case HUMAN_NAME = 'HumanName';
    case ID = 'id';
    case ID_HYPHEN_PRIMITIVE = 'id-primitive';
    case IDENTIFIER = 'Identifier';
    case IDENTIFIER_USE = 'IdentifierUse';
    case IDENTIFIER_USE_HYPHEN_LIST = 'IdentifierUse-list';
    case IDENTITY_ASSURANCE_LEVEL = 'IdentityAssuranceLevel';
    case IDENTITY_ASSURANCE_LEVEL_HYPHEN_LIST = 'IdentityAssuranceLevel-list';
    case IMAGING_OBJECT_SELECTION = 'ImagingObjectSelection';
    case IMAGING_OBJECT_SELECTION_DOT_FRAMES = 'ImagingObjectSelection.Frames';
    case IMAGING_OBJECT_SELECTION_DOT_INSTANCE = 'ImagingObjectSelection.Instance';
    case IMAGING_OBJECT_SELECTION_DOT_SERIES = 'ImagingObjectSelection.Series';
    case IMAGING_OBJECT_SELECTION_DOT_STUDY = 'ImagingObjectSelection.Study';
    case IMAGING_STUDY = 'ImagingStudy';
    case IMAGING_STUDY_DOT_INSTANCE = 'ImagingStudy.Instance';
    case IMAGING_STUDY_DOT_SERIES = 'ImagingStudy.Series';
    case IMMUNIZATION = 'Immunization';
    case IMMUNIZATION_DOT_EXPLANATION = 'Immunization.Explanation';
    case IMMUNIZATION_DOT_REACTION = 'Immunization.Reaction';
    case IMMUNIZATION_DOT_VACCINATION_PROTOCOL = 'Immunization.VaccinationProtocol';
    case IMMUNIZATION_RECOMMENDATION = 'ImmunizationRecommendation';
    case IMMUNIZATION_RECOMMENDATION_DOT_DATE_CRITERION = 'ImmunizationRecommendation.DateCriterion';
    case IMMUNIZATION_RECOMMENDATION_DOT_PROTOCOL = 'ImmunizationRecommendation.Protocol';
    case IMMUNIZATION_RECOMMENDATION_DOT_RECOMMENDATION = 'ImmunizationRecommendation.Recommendation';
    case IMPLEMENTATION_GUIDE = 'ImplementationGuide';
    case IMPLEMENTATION_GUIDE_DOT_CONTACT = 'ImplementationGuide.Contact';
    case IMPLEMENTATION_GUIDE_DOT_DEPENDENCY = 'ImplementationGuide.Dependency';
    case IMPLEMENTATION_GUIDE_DOT_GLOBAL = 'ImplementationGuide.Global';
    case IMPLEMENTATION_GUIDE_DOT_PACKAGE = 'ImplementationGuide.Package';
    case IMPLEMENTATION_GUIDE_DOT_PAGE = 'ImplementationGuide.Page';
    case IMPLEMENTATION_GUIDE_DOT_RESOURCE = 'ImplementationGuide.Resource';
    case INSTANCE_AVAILABILITY = 'InstanceAvailability';
    case INSTANCE_AVAILABILITY_HYPHEN_LIST = 'InstanceAvailability-list';
    case INSTANT = 'instant';
    case INSTANT_HYPHEN_PRIMITIVE = 'instant-primitive';
    case INTEGER = 'integer';
    case INTEGER_HYPHEN_PRIMITIVE = 'integer-primitive';
    case ISSUE_SEVERITY = 'IssueSeverity';
    case ISSUE_SEVERITY_HYPHEN_LIST = 'IssueSeverity-list';
    case ISSUE_TYPE = 'IssueType';
    case ISSUE_TYPE_HYPHEN_LIST = 'IssueType-list';
    case LINK_TYPE = 'LinkType';
    case LINK_TYPE_HYPHEN_LIST = 'LinkType-list';
    case LIST = 'List';
    case LIST_DOT_ENTRY = 'List.Entry';
    case LIST_MODE = 'ListMode';
    case LIST_MODE_HYPHEN_LIST = 'ListMode-list';
    case LIST_STATUS = 'ListStatus';
    case LIST_STATUS_HYPHEN_LIST = 'ListStatus-list';
    case LOCATION = 'Location';
    case LOCATION_DOT_POSITION = 'Location.Position';
    case LOCATION_MODE = 'LocationMode';
    case LOCATION_MODE_HYPHEN_LIST = 'LocationMode-list';
    case LOCATION_STATUS = 'LocationStatus';
    case LOCATION_STATUS_HYPHEN_LIST = 'LocationStatus-list';
    case MARKDOWN = 'markdown';
    case MARKDOWN_HYPHEN_PRIMITIVE = 'markdown-primitive';
    case MEASMNT_HYPHEN_PRINCIPLE = 'Measmnt-Principle';
    case MEASMNT_HYPHEN_PRINCIPLE_HYPHEN_LIST = 'Measmnt-Principle-list';
    case MEDIA = 'Media';
    case MEDICATION = 'Medication';
    case MEDICATION_DOT_BATCH = 'Medication.Batch';
    case MEDICATION_DOT_CONTENT = 'Medication.Content';
    case MEDICATION_DOT_INGREDIENT = 'Medication.Ingredient';
    case MEDICATION_DOT_PACKAGE = 'Medication.Package';
    case MEDICATION_DOT_PRODUCT = 'Medication.Product';
    case MEDICATION_ADMINISTRATION = 'MedicationAdministration';
    case MEDICATION_ADMINISTRATION_DOT_DOSAGE = 'MedicationAdministration.Dosage';
    case MEDICATION_ADMINISTRATION_STATUS = 'MedicationAdministrationStatus';
    case MEDICATION_ADMINISTRATION_STATUS_HYPHEN_LIST = 'MedicationAdministrationStatus-list';
    case MEDICATION_DISPENSE = 'MedicationDispense';
    case MEDICATION_DISPENSE_DOT_DOSAGE_INSTRUCTION = 'MedicationDispense.DosageInstruction';
    case MEDICATION_DISPENSE_DOT_SUBSTITUTION = 'MedicationDispense.Substitution';
    case MEDICATION_DISPENSE_STATUS = 'MedicationDispenseStatus';
    case MEDICATION_DISPENSE_STATUS_HYPHEN_LIST = 'MedicationDispenseStatus-list';
    case MEDICATION_ORDER = 'MedicationOrder';
    case MEDICATION_ORDER_DOT_DISPENSE_REQUEST = 'MedicationOrder.DispenseRequest';
    case MEDICATION_ORDER_DOT_DOSAGE_INSTRUCTION = 'MedicationOrder.DosageInstruction';
    case MEDICATION_ORDER_DOT_SUBSTITUTION = 'MedicationOrder.Substitution';
    case MEDICATION_ORDER_STATUS = 'MedicationOrderStatus';
    case MEDICATION_ORDER_STATUS_HYPHEN_LIST = 'MedicationOrderStatus-list';
    case MEDICATION_STATEMENT = 'MedicationStatement';
    case MEDICATION_STATEMENT_DOT_DOSAGE = 'MedicationStatement.Dosage';
    case MEDICATION_STATEMENT_STATUS = 'MedicationStatementStatus';
    case MEDICATION_STATEMENT_STATUS_HYPHEN_LIST = 'MedicationStatementStatus-list';
    case MESSAGE_HEADER = 'MessageHeader';
    case MESSAGE_HEADER_DOT_DESTINATION = 'MessageHeader.Destination';
    case MESSAGE_HEADER_DOT_RESPONSE = 'MessageHeader.Response';
    case MESSAGE_HEADER_DOT_SOURCE = 'MessageHeader.Source';
    case MESSAGE_SIGNIFICANCE_CATEGORY = 'MessageSignificanceCategory';
    case MESSAGE_SIGNIFICANCE_CATEGORY_HYPHEN_LIST = 'MessageSignificanceCategory-list';
    case META = 'Meta';
    case MONEY = 'Money';
    case NAME_USE = 'NameUse';
    case NAME_USE_HYPHEN_LIST = 'NameUse-list';
    case NAMING_SYSTEM = 'NamingSystem';
    case NAMING_SYSTEM_DOT_CONTACT = 'NamingSystem.Contact';
    case NAMING_SYSTEM_DOT_UNIQUE_ID = 'NamingSystem.UniqueId';
    case NAMING_SYSTEM_IDENTIFIER_TYPE = 'NamingSystemIdentifierType';
    case NAMING_SYSTEM_IDENTIFIER_TYPE_HYPHEN_LIST = 'NamingSystemIdentifierType-list';
    case NAMING_SYSTEM_TYPE = 'NamingSystemType';
    case NAMING_SYSTEM_TYPE_HYPHEN_LIST = 'NamingSystemType-list';
    case NARRATIVE = 'Narrative';
    case NARRATIVE_STATUS = 'NarrativeStatus';
    case NARRATIVE_STATUS_HYPHEN_LIST = 'NarrativeStatus-list';
    case NOTE_TYPE = 'NoteType';
    case NOTE_TYPE_HYPHEN_LIST = 'NoteType-list';
    case NUTRITION_ORDER = 'NutritionOrder';
    case NUTRITION_ORDER_DOT_ADMINISTRATION = 'NutritionOrder.Administration';
    case NUTRITION_ORDER_DOT_ENTERAL_FORMULA = 'NutritionOrder.EnteralFormula';
    case NUTRITION_ORDER_DOT_NUTRIENT = 'NutritionOrder.Nutrient';
    case NUTRITION_ORDER_DOT_ORAL_DIET = 'NutritionOrder.OralDiet';
    case NUTRITION_ORDER_DOT_SUPPLEMENT = 'NutritionOrder.Supplement';
    case NUTRITION_ORDER_DOT_TEXTURE = 'NutritionOrder.Texture';
    case NUTRITION_ORDER_STATUS = 'NutritionOrderStatus';
    case NUTRITION_ORDER_STATUS_HYPHEN_LIST = 'NutritionOrderStatus-list';
    case OBSERVATION = 'Observation';
    case OBSERVATION_DOT_COMPONENT = 'Observation.Component';
    case OBSERVATION_DOT_REFERENCE_RANGE = 'Observation.ReferenceRange';
    case OBSERVATION_DOT_RELATED = 'Observation.Related';
    case OBSERVATION_RELATIONSHIP_TYPE = 'ObservationRelationshipType';
    case OBSERVATION_RELATIONSHIP_TYPE_HYPHEN_LIST = 'ObservationRelationshipType-list';
    case OBSERVATION_STATUS = 'ObservationStatus';
    case OBSERVATION_STATUS_HYPHEN_LIST = 'ObservationStatus-list';
    case OID = 'oid';
    case OID_HYPHEN_PRIMITIVE = 'oid-primitive';
    case OPERATION_DEFINITION = 'OperationDefinition';
    case OPERATION_DEFINITION_DOT_BINDING = 'OperationDefinition.Binding';
    case OPERATION_DEFINITION_DOT_CONTACT = 'OperationDefinition.Contact';
    case OPERATION_DEFINITION_DOT_PARAMETER = 'OperationDefinition.Parameter';
    case OPERATION_KIND = 'OperationKind';
    case OPERATION_KIND_HYPHEN_LIST = 'OperationKind-list';
    case OPERATION_OUTCOME = 'OperationOutcome';
    case OPERATION_OUTCOME_DOT_ISSUE = 'OperationOutcome.Issue';
    case OPERATION_PARAMETER_USE = 'OperationParameterUse';
    case OPERATION_PARAMETER_USE_HYPHEN_LIST = 'OperationParameterUse-list';
    case ORDER = 'Order';
    case ORDER_DOT_WHEN = 'Order.When';
    case ORDER_RESPONSE = 'OrderResponse';
    case ORDER_STATUS = 'OrderStatus';
    case ORDER_STATUS_HYPHEN_LIST = 'OrderStatus-list';
    case ORGANIZATION = 'Organization';
    case ORGANIZATION_DOT_CONTACT = 'Organization.Contact';
    case PARAMETERS = 'Parameters';
    case PARAMETERS_DOT_PARAMETER = 'Parameters.Parameter';
    case PARTICIPANT_REQUIRED = 'ParticipantRequired';
    case PARTICIPANT_REQUIRED_HYPHEN_LIST = 'ParticipantRequired-list';
    case PARTICIPANT_STATUS = 'ParticipantStatus';
    case PARTICIPANT_STATUS_HYPHEN_LIST = 'ParticipantStatus-list';
    case PARTICIPATION_STATUS = 'ParticipationStatus';
    case PARTICIPATION_STATUS_HYPHEN_LIST = 'ParticipationStatus-list';
    case PATIENT = 'Patient';
    case PATIENT_DOT_ANIMAL = 'Patient.Animal';
    case PATIENT_DOT_COMMUNICATION = 'Patient.Communication';
    case PATIENT_DOT_CONTACT = 'Patient.Contact';
    case PATIENT_DOT_LINK = 'Patient.Link';
    case PAYMENT_NOTICE = 'PaymentNotice';
    case PAYMENT_RECONCILIATION = 'PaymentReconciliation';
    case PAYMENT_RECONCILIATION_DOT_DETAIL = 'PaymentReconciliation.Detail';
    case PAYMENT_RECONCILIATION_DOT_NOTE = 'PaymentReconciliation.Note';
    case PERIOD = 'Period';
    case PERSON = 'Person';
    case PERSON_DOT_LINK = 'Person.Link';
    case POSITIVE_INT = 'positiveInt';
    case POSITIVE_INT_HYPHEN_PRIMITIVE = 'positiveInt-primitive';
    case PRACTITIONER = 'Practitioner';
    case PRACTITIONER_DOT_PRACTITIONER_ROLE = 'Practitioner.PractitionerRole';
    case PRACTITIONER_DOT_QUALIFICATION = 'Practitioner.Qualification';
    case PROCEDURE = 'Procedure';
    case PROCEDURE_DOT_FOCAL_DEVICE = 'Procedure.FocalDevice';
    case PROCEDURE_DOT_PERFORMER = 'Procedure.Performer';
    case PROCEDURE_REQUEST = 'ProcedureRequest';
    case PROCEDURE_REQUEST_PRIORITY = 'ProcedureRequestPriority';
    case PROCEDURE_REQUEST_PRIORITY_HYPHEN_LIST = 'ProcedureRequestPriority-list';
    case PROCEDURE_REQUEST_STATUS = 'ProcedureRequestStatus';
    case PROCEDURE_REQUEST_STATUS_HYPHEN_LIST = 'ProcedureRequestStatus-list';
    case PROCEDURE_STATUS = 'ProcedureStatus';
    case PROCEDURE_STATUS_HYPHEN_LIST = 'ProcedureStatus-list';
    case PROCESS_REQUEST = 'ProcessRequest';
    case PROCESS_REQUEST_DOT_ITEM = 'ProcessRequest.Item';
    case PROCESS_RESPONSE = 'ProcessResponse';
    case PROCESS_RESPONSE_DOT_NOTES = 'ProcessResponse.Notes';
    case PROPERTY_REPRESENTATION = 'PropertyRepresentation';
    case PROPERTY_REPRESENTATION_HYPHEN_LIST = 'PropertyRepresentation-list';
    case PROVENANCE = 'Provenance';
    case PROVENANCE_DOT_AGENT = 'Provenance.Agent';
    case PROVENANCE_DOT_ENTITY = 'Provenance.Entity';
    case PROVENANCE_DOT_RELATED_AGENT = 'Provenance.RelatedAgent';
    case PROVENANCE_ENTITY_ROLE = 'ProvenanceEntityRole';
    case PROVENANCE_ENTITY_ROLE_HYPHEN_LIST = 'ProvenanceEntityRole-list';
    case QUANTITY = 'Quantity';
    case QUANTITY_COMPARATOR = 'QuantityComparator';
    case QUANTITY_COMPARATOR_HYPHEN_LIST = 'QuantityComparator-list';
    case QUESTIONNAIRE = 'Questionnaire';
    case QUESTIONNAIRE_DOT_GROUP = 'Questionnaire.Group';
    case QUESTIONNAIRE_DOT_QUESTION = 'Questionnaire.Question';
    case QUESTIONNAIRE_RESPONSE = 'QuestionnaireResponse';
    case QUESTIONNAIRE_RESPONSE_DOT_ANSWER = 'QuestionnaireResponse.Answer';
    case QUESTIONNAIRE_RESPONSE_DOT_GROUP = 'QuestionnaireResponse.Group';
    case QUESTIONNAIRE_RESPONSE_DOT_QUESTION = 'QuestionnaireResponse.Question';
    case QUESTIONNAIRE_RESPONSE_STATUS = 'QuestionnaireResponseStatus';
    case QUESTIONNAIRE_RESPONSE_STATUS_HYPHEN_LIST = 'QuestionnaireResponseStatus-list';
    case QUESTIONNAIRE_STATUS = 'QuestionnaireStatus';
    case QUESTIONNAIRE_STATUS_HYPHEN_LIST = 'QuestionnaireStatus-list';
    case RANGE = 'Range';
    case RATIO = 'Ratio';
    case REFERENCE = 'Reference';
    case REFERRAL_REQUEST = 'ReferralRequest';
    case REFERRAL_STATUS = 'ReferralStatus';
    case REFERRAL_STATUS_HYPHEN_LIST = 'ReferralStatus-list';
    case RELATED_PERSON = 'RelatedPerson';
    case REMITTANCE_OUTCOME = 'RemittanceOutcome';
    case REMITTANCE_OUTCOME_HYPHEN_LIST = 'RemittanceOutcome-list';
    case RESOURCE = 'Resource';
    case RESOURCE_CONTAINER = 'ResourceContainer';
    case RESOURCE_VERSION_POLICY = 'ResourceVersionPolicy';
    case RESOURCE_VERSION_POLICY_HYPHEN_LIST = 'ResourceVersionPolicy-list';
    case RESPONSE_TYPE = 'ResponseType';
    case RESPONSE_TYPE_HYPHEN_LIST = 'ResponseType-list';
    case RESTFUL_CONFORMANCE_MODE = 'RestfulConformanceMode';
    case RESTFUL_CONFORMANCE_MODE_HYPHEN_LIST = 'RestfulConformanceMode-list';
    case RISK_ASSESSMENT = 'RiskAssessment';
    case RISK_ASSESSMENT_DOT_PREDICTION = 'RiskAssessment.Prediction';
    case SAMPLED_DATA = 'SampledData';
    case SAMPLED_DATA_DATA_TYPE = 'SampledDataDataType';
    case SAMPLED_DATA_DATA_TYPE_HYPHEN_PRIMITIVE = 'SampledDataDataType-primitive';
    case SCHEDULE = 'Schedule';
    case SEARCH_ENTRY_MODE = 'SearchEntryMode';
    case SEARCH_ENTRY_MODE_HYPHEN_LIST = 'SearchEntryMode-list';
    case SEARCH_MODIFIER_CODE = 'SearchModifierCode';
    case SEARCH_MODIFIER_CODE_HYPHEN_LIST = 'SearchModifierCode-list';
    case SEARCH_PARAMETER = 'SearchParameter';
    case SEARCH_PARAMETER_DOT_CONTACT = 'SearchParameter.Contact';
    case SEARCH_PARAM_TYPE = 'SearchParamType';
    case SEARCH_PARAM_TYPE_HYPHEN_LIST = 'SearchParamType-list';
    case SIGNATURE = 'Signature';
    case SIMPLE_QUANTITY = 'SimpleQuantity';
    case SLICING_RULES = 'SlicingRules';
    case SLICING_RULES_HYPHEN_LIST = 'SlicingRules-list';
    case SLOT = 'Slot';
    case SLOT_STATUS = 'SlotStatus';
    case SLOT_STATUS_HYPHEN_LIST = 'SlotStatus-list';
    case SPECIMEN = 'Specimen';
    case SPECIMEN_DOT_COLLECTION = 'Specimen.Collection';
    case SPECIMEN_DOT_CONTAINER = 'Specimen.Container';
    case SPECIMEN_DOT_TREATMENT = 'Specimen.Treatment';
    case SPECIMEN_STATUS = 'SpecimenStatus';
    case SPECIMEN_STATUS_HYPHEN_LIST = 'SpecimenStatus-list';
    case STRING = 'string';
    case STRING_HYPHEN_PRIMITIVE = 'string-primitive';
    case STRUCTURE_DEFINITION = 'StructureDefinition';
    case STRUCTURE_DEFINITION_DOT_CONTACT = 'StructureDefinition.Contact';
    case STRUCTURE_DEFINITION_DOT_DIFFERENTIAL = 'StructureDefinition.Differential';
    case STRUCTURE_DEFINITION_DOT_MAPPING = 'StructureDefinition.Mapping';
    case STRUCTURE_DEFINITION_DOT_SNAPSHOT = 'StructureDefinition.Snapshot';
    case STRUCTURE_DEFINITION_KIND = 'StructureDefinitionKind';
    case STRUCTURE_DEFINITION_KIND_HYPHEN_LIST = 'StructureDefinitionKind-list';
    case SUBSCRIPTION = 'Subscription';
    case SUBSCRIPTION_DOT_CHANNEL = 'Subscription.Channel';
    case SUBSCRIPTION_CHANNEL_TYPE = 'SubscriptionChannelType';
    case SUBSCRIPTION_CHANNEL_TYPE_HYPHEN_LIST = 'SubscriptionChannelType-list';
    case SUBSCRIPTION_STATUS = 'SubscriptionStatus';
    case SUBSCRIPTION_STATUS_HYPHEN_LIST = 'SubscriptionStatus-list';
    case SUBSTANCE = 'Substance';
    case SUBSTANCE_DOT_INGREDIENT = 'Substance.Ingredient';
    case SUBSTANCE_DOT_INSTANCE = 'Substance.Instance';
    case SUPPLY_DELIVERY = 'SupplyDelivery';
    case SUPPLY_DELIVERY_STATUS = 'SupplyDeliveryStatus';
    case SUPPLY_DELIVERY_STATUS_HYPHEN_LIST = 'SupplyDeliveryStatus-list';
    case SUPPLY_REQUEST = 'SupplyRequest';
    case SUPPLY_REQUEST_DOT_WHEN = 'SupplyRequest.When';
    case SUPPLY_REQUEST_STATUS = 'SupplyRequestStatus';
    case SUPPLY_REQUEST_STATUS_HYPHEN_LIST = 'SupplyRequestStatus-list';
    case SYSTEM_RESTFUL_INTERACTION = 'SystemRestfulInteraction';
    case SYSTEM_RESTFUL_INTERACTION_HYPHEN_LIST = 'SystemRestfulInteraction-list';
    case TEST_SCRIPT = 'TestScript';
    case TEST_SCRIPT_DOT_ACTION = 'TestScript.Action';
    case TEST_SCRIPT_DOT_ACTION_1 = 'TestScript.Action1';
    case TEST_SCRIPT_DOT_ACTION_2 = 'TestScript.Action2';
    case TEST_SCRIPT_DOT_ASSERT = 'TestScript.Assert';
    case TEST_SCRIPT_DOT_CAPABILITY = 'TestScript.Capability';
    case TEST_SCRIPT_DOT_CONTACT = 'TestScript.Contact';
    case TEST_SCRIPT_DOT_FIXTURE = 'TestScript.Fixture';
    case TEST_SCRIPT_DOT_LINK = 'TestScript.Link';
    case TEST_SCRIPT_DOT_METADATA = 'TestScript.Metadata';
    case TEST_SCRIPT_DOT_OPERATION = 'TestScript.Operation';
    case TEST_SCRIPT_DOT_REQUEST_HEADER = 'TestScript.RequestHeader';
    case TEST_SCRIPT_DOT_SETUP = 'TestScript.Setup';
    case TEST_SCRIPT_DOT_TEARDOWN = 'TestScript.Teardown';
    case TEST_SCRIPT_DOT_TEST = 'TestScript.Test';
    case TEST_SCRIPT_DOT_VARIABLE = 'TestScript.Variable';
    case TIME = 'time';
    case TIME_HYPHEN_PRIMITIVE = 'time-primitive';
    case TIMING = 'Timing';
    case TIMING_DOT_REPEAT = 'Timing.Repeat';
    case TRANSACTION_MODE = 'TransactionMode';
    case TRANSACTION_MODE_HYPHEN_LIST = 'TransactionMode-list';
    case TYPE_RESTFUL_INTERACTION = 'TypeRestfulInteraction';
    case TYPE_RESTFUL_INTERACTION_HYPHEN_LIST = 'TypeRestfulInteraction-list';
    case UNITS_OF_TIME = 'UnitsOfTime';
    case UNITS_OF_TIME_HYPHEN_LIST = 'UnitsOfTime-list';
    case UNKNOWN_CONTENT_CODE = 'UnknownContentCode';
    case UNKNOWN_CONTENT_CODE_HYPHEN_LIST = 'UnknownContentCode-list';
    case UNSIGNED_INT = 'unsignedInt';
    case UNSIGNED_INT_HYPHEN_PRIMITIVE = 'unsignedInt-primitive';
    case URI = 'uri';
    case URI_HYPHEN_PRIMITIVE = 'uri-primitive';
    case USE = 'Use';
    case USE_HYPHEN_LIST = 'Use-list';
    case UUID = 'uuid';
    case UUID_HYPHEN_PRIMITIVE = 'uuid-primitive';
    case VALUE_SET = 'ValueSet';
    case VALUE_SET_DOT_CODE_SYSTEM = 'ValueSet.CodeSystem';
    case VALUE_SET_DOT_COMPOSE = 'ValueSet.Compose';
    case VALUE_SET_DOT_CONCEPT = 'ValueSet.Concept';
    case VALUE_SET_DOT_CONCEPT_1 = 'ValueSet.Concept1';
    case VALUE_SET_DOT_CONTACT = 'ValueSet.Contact';
    case VALUE_SET_DOT_CONTAINS = 'ValueSet.Contains';
    case VALUE_SET_DOT_DESIGNATION = 'ValueSet.Designation';
    case VALUE_SET_DOT_EXPANSION = 'ValueSet.Expansion';
    case VALUE_SET_DOT_FILTER = 'ValueSet.Filter';
    case VALUE_SET_DOT_INCLUDE = 'ValueSet.Include';
    case VALUE_SET_DOT_PARAMETER = 'ValueSet.Parameter';
    case VISION_BASE = 'VisionBase';
    case VISION_BASE_HYPHEN_LIST = 'VisionBase-list';
    case VISION_EYES = 'VisionEyes';
    case VISION_EYES_HYPHEN_LIST = 'VisionEyes-list';
    case VISION_PRESCRIPTION = 'VisionPrescription';
    case VISION_PRESCRIPTION_DOT_DISPENSE = 'VisionPrescription.Dispense';
    case XHTML = 'Xhtml';
    case XPATH_USAGE_TYPE = 'XPathUsageType';
    case XPATH_USAGE_TYPE_HYPHEN_LIST = 'XPathUsageType-list';
}

